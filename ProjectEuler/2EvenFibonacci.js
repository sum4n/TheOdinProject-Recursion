#!/usr/bin/env node
// Even Fibonacci numbers
// Problem 2

// Each new term in the Fibonacci sequence is generated by
// adding the previous two terms. By starting with 1 and 2,
// the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose
// values do not exceed four million, find the sum of the
// even-valued terms.

console.log("--------With Recurssion-------");

function fibs(a = 0, b = 1, sum = 0) {
  let c = b + a;
  a = b;
  b = c;

  if (c > 4000000) {
    return `Sum of even valued terms: ${sum}`;
  }

  if (c % 2 == 0) {
    sum += c;
    // console.log(`sum: ${sum}`);
  }

  console.log(c);

  return fibs(a, b, sum);
}

console.log(fibs());

console.log("------With While loop------");

function fib() {
  let a = 1;
  let b = 2;
  let c = 0;
  let total = 0;

  while (a <= 4000000) {
    c = a;
    console.log(c);
    if (c % 2 == 0) {
      total += c;
    }
    a = b;
    b = c + b;
  }

  console.log(`Sum of even valued terms: ${total}`);
}

fib();
